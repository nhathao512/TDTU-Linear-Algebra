# -*- coding: utf-8 -*-
"""Lab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xN6kpiqvzhJRKfNpsCIY8cRVqAzc-BE2
"""

#Exercise 1:
x = [1, 3, 5, 2, 9]
y = [-1, 3, 15, 27, 29]
print("x =", x)
print("y =", y)
print("len x =",len(x))
print("len y =",len(y))
print("x + y", x + y)
import numpy as np
vx = np.array(x)
vy = np.array(y)
print("vx =", vx)
print("vy =", vy)
print("len vx =",len(vx))
print("len vy =",len(vy))
print("vx + vy =", vx+vy)

#Exercise 2:
import numpy as np
#2a
n = 12
b1 = [12+i*2 for i in np.arange(0, n)]
b2 = np.arange(12, 12+n*2, 2)
print("a) b1 =", b1)
print("a) b2 =", b2)
#2b
n = 31
c1 = [31+i*2 for i in np.arange(0, n)]
c2 = np.arange(31, 31+n*2, 2)
print("b) c1 =", c1)
print("b) c2 =", c2)
#2c
n = 10
x = np.arange(-5, -5+n, 1)
print("c) x =", x)
#2d
n = 10
y = np.arange(5, -n+5, -1)
print("d) y =", y)
#2e
n = 10
z = np.arange(10, 10-n*2,-2)
print("e) z =", z)
#2f
n = 10
w1 = [1]
for i in range(1, n):
  w1.append(2*w1[i-1])
print("f) w1 =", w1)
w = [1.0/w1[i] for i in range(len(w1))]
print("f) w =", w)
#2g
d1 = [1, 1]
for i in range(2, n):
  d1.append(d1[i-1] + d1[i-2])
print("g) d1 =", d1)
d = [1.0/d1[i] for i in range(len(d1))]
print("g) d =", d)
#2h
n = 30
t = 1
e1 = [2]
for i in range(t, n + 1):
  if (i > 1):
    for j in range(2, i):
      if (i % j) == 0:
        break
    else:
      e1.append(i)
e2 = e1[1:n]
print("h) e1 =", e2)
e = [1.0/e2[i] for i in range(len(e2))]
print("h) e =", e)
#2i
n = 8
a1 = [1]
for i in range(1, n):
  a1.append(a1[i-1] + i + 1)
a = np.array(a1)
print("i) a = ", a)
#2j
N = 10
j = 0
n1 = [2]
for i in range(1, N):
  n1.append(n1[i-1] + 3 + j)
  j=j+2
n2 = np.array(n1)
print("j) n1 = ", n2)
n = [1.0/n2[i] for i in range(len(n2))]
print("j) n = ", n)
#2k
p1 = []
p2 = []
p = []
p1 = [i for i in np.arange(0, 10)]
p2 = [j for j in np.arange(1,11)]
print("k) p1 =", p1)
print("k) p2 =", p2)
p = [p1[i]*1.0/p2[i] for i in range(len(p1))]
print("k) p = ", p)
#2l
lst_az = []
for i in range(ord('a'), ord('z')+1):
  lst_az.append(chr(i))
print("l) list a->z:", lst_az)
v_az = np.array(lst_az)
print("l) Vector a->z:", v_az)
#2m
s1=[]
for i in range(ord("A"), ord("J")+1):
  if(chr(i)!='B' and chr(i)!='C' and chr(i)!='E' and chr(i)!='F' and chr(i)!='H' and chr(i)!='I'):
    s1.append(chr(i))
s = np.array(s1)
print("m) s = ", s)

#Exercise 3:
import numpy as np
x = [10**i for i in np.arange(1, n)]
print(x)

#Exercise 4:
x = [1, 2, 3]
y = [98, 12, 33]
print("x =", x)
print("y =", y)
print("len x =",len(x))
print("len y =",len(y))
print("z =", x + y)

#Exercise 6:
import numpy as np
x = np.arange(0, 22, 2)
print(x)
xa = x[0:6]
print("a) xa =", xa)
xb = x[6:10]
print("b) xb =",xb)
xc = x[[1, 4, 10]]
print("c) xc =", xc)
xd = x[[1, 3, 5, 7]]
print("d) xd =",xd)
print("e) x_odd =",end = " ")
for i in range(0, len(x)):
  if(i % 2 == 1):
    print(x[i], end = " ")

print("\nf) x_even =",end = " ")
for i in range(0, len(x)):
  if(i % 2 == 0):
    print(x[i], end = " ")

#Exercise 7:
import numpy as np
import math

x = np.array([3, 11, -9, -131, -1, 1, -11, 91, -6, 407, -12, -11, 12, 153, 371])
print("x = ", x)
print()

#a
print("a) max_x = ", np.max(x))
#b
print("b) min_x = ", np.min(x))
#c
x1 = [x[i] for i in range(len(x)) if x[i]>=10]
print("c) The values greater than 10 is: ", x1)
#d
print("d) x_reverse = ", np.flipud(x))
#e
x4 = list(x)
x4.sort()
x5=np.array(x4)
print("e) x_ascending = ", x5)
#f
x6=list(x)
x6.sort(reverse=True)
x7=np.array(x6)
print("f) x_descending = ", x7)
#g
n = len(x)
count = 0
for i in range(len(x)):
    for j in range(i+1, len(x)):
        if x[i]+x[j]==0:
            count += 1
print("g) The times xi+ xj = 0 is: ", count)
#h
temp = {}
for i in x:
        if i in temp:
            temp[i] += 1
        else:
            temp[i] = 1
count = sum(temp[i] > 1 for i in temp)
print("h) S = ", count)
#i
y=[]
N = len(x)
y = [x[i]+x[N-i-1] for i in range(len(x))]
print("i) y = ", y)
#j
def Arms(num):
    if num>0:
        num_str = str(num)
        n = len(num_str)
        s = sum(int(i)**n for i in num_str)
        return s == num
    else:
        return False
w = [num for num in x if Arms(num)]
print("j) w = ",w)
#k
k = np.delete(x, x<0)
print("k) x+ = ", k)
#l
l = np.median(x)
print("l) x_med = ", l)
#m
mean = np.median(x)
m = sum(x[i] for i in range(len(x)) if x[i]<mean)
print("m) m = ", m)
#n
n = [abs(i) if i<0 else i for i in x]
print("n) n = ", n)